limit_req_zone $binary_remote_addr zone=one:5m rate=120r/m;
limit_conn_zone $binary_remote_addr zone=addr:5m;


server {
 listen 80 default_server;
 listen [::]:80 default_server;
 return 301 https://$http_host$request_uri;
 etag on;
 limit_req zone=one burst=60;
 limit_conn addr 5;
}

server {
 listen 443 ssl default_server;
 listen [::]:443 ssl default_server;
 etag on;
 
 limit_req zone=one burst=60;
 limit_conn addr 5;

 ssl_certificate /etc/postfix/certs/scrollout.cert;
 ssl_certificate_key /etc/postfix/certs/scrollout.key;
 ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
 ssl_prefer_server_ciphers on;
 ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED";

 add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";
 add_header imagetoolbar "no";
 # add_header Content-Security-Policy "frame-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; connect-src 'self'; object-src 'self'";
 add_header X-Content-Type-Options "nosniff";
 add_header X-Frame-Options "SAMEORIGIN";
 add_header X-XSS-Protection "1; mode=block";
 add_header X-Robots-Tag "none";
 add_header Alternate-Protocol "443:quic";
 
 root /var/www;
 
 # Add index.php to the list if you are using PHP
 index index.php index.html index.htm;

 server_name _;


 location / {
 # First attempt to serve request as file, then
 # as directory, then fall back to displaying a 404.
 try_files $uri $uri/ =404;

 allow 192.168.0.0/16;
 allow 172.16.0.0/12;
 allow 10.0.0.0/8;

 # Uncomment to limit access from Intranet only
 # deny all;

 auth_basic "Scrollout F1";
 auth_basic_user_file /var/www/.htpasswd;

 add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";



	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~* \.php$ {
	include snippets/fastcgi-php.conf;
	# # With php5-cgi alone:
	# fastcgi_pass 127.0.0.1:9000;
	# With php5-fpm:
	fastcgi_pass unix:/var/run/php5-fpm.sock;
	add_header Cache-Control "private, must-revalidate, stale-while-revalidate=30";
	}

	location ~* \.(?:htm|html|txt)$ {
		if (!-f $request_filename) {
			rewrite ^(.*)\.html$ $scheme://$http_host$1.php permanent;
		}
	add_header Cache-Control "private, must-revalidate, stale-while-revalidate=30";
	}

	location ~* \.cgi$ {
		include /etc/nginx/fastcgi_params;
		fastcgi_pass fcgiwrap;
		add_header Cache-Control "max-age=300, must-revalidate, private, stale-while-revalidate=60";
	}

	# CSS and Javascript
	location ~* \.(?:css|js)$ {
		add_header Cache-Control "max-age=86400, public, stale-while-revalidate=604800";
	}
	
	location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff|woff2)$ {
		add_header Cache-Control "max-age=604800, public, stale-while-revalidate=604800";
	}
	
	location ~* \.(?:eot|ttf|svg)$ {
		add_header Vary Accept-Encoding;
		add_header Cache-Control "max-age=604800, public, stale-while-revalidate=604800";
	}
	

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~* /\.ht {
	deny all;
	}
 } # location /
} # server
